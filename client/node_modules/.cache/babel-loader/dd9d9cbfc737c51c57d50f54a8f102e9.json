{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\Documents\\\\Coding\\\\Leads\\\\LeadsApp\\\\src\\\\Components\\\\ProductForm\\\\ProductForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { CardPanel, Button } from \"react-materialize\";\nimport Header from \"../Header/Header\";\nimport MyFooter from \"../Footer/Footer\";\nimport \"./productForm.css\";\nimport products from \"../../constants/products.js\";\n\nconst ProductForm = props => {\n  // let url = props.match.params.product;\n  let url = props.currentUrl;\n  console.log(url + \"is type of \" + typeof url);\n  let productIndex = 0;\n  const [count, setCount] = useState(1);\n  const [step, setStep] = useState(props.step);\n  let currentObj;\n  useEffect(() => setStep(props.step), [props.step]);\n\n  const getCurrentProduct = () => {\n    productIndex = 0;\n\n    for (let i = 0; i < products.products.length; i++) {\n      if (url === products.products[i].name) {\n        productIndex = i;\n        console.log(\"this worked! \" + products.products[i].name + \" array of\" + i);\n      }\n    }\n\n    currentObj = products.products[productIndex];\n    return currentObj;\n  }; // marker to show test\n\n\n  getCurrentProduct();\n  let radioQ;\n  let radioH;\n  let radioI;\n\n  switch (count) {\n    case 1:\n      radioH = currentObj.header1;\n      radioQ = currentObj.questions1;\n      radioI = currentObj.icons1;\n      break;\n\n    case 2:\n      radioH = currentObj.header2;\n      radioQ = currentObj.questions2;\n      radioI = currentObj.icons2;\n      break;\n\n    case 3:\n      if (currentObj.header3) {\n        radioH = currentObj.header3;\n        radioQ = currentObj.questions3;\n        radioI = currentObj.icons3;\n        break;\n      } else {\n        // setCount(count + 1);\n        setStep(count + 1);\n      }\n\n      ;\n      break;\n  }\n\n  ;\n\n  const updateCount = () => {\n    setCount(count + 1);\n    setStep(step + 1);\n  };\n\n  console.log(radioI);\n  console.log(radioQ);\n\n  const Radios = () => {\n    console.log(\"this is test/ array number \" + productIndex);\n    let indexNum = 0;\n    let currentProduct = radioQ.map(item => {\n      // console.log(\"new line\" + currentObj.icons1[3]);\n      indexNum = radioQ.indexOf(item);\n      return React.createElement(\"div\", {\n        className: \"customRadio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"with-gap\",\n        type: \"radio\",\n        name: \"product\",\n        id: currentObj.name,\n        value: currentObj.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: currentObj.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"radioImage hoverable\",\n        src: radioI[indexNum],\n        alt: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, item));\n    });\n    return currentProduct;\n  }; // use state once submit his hit, to slide in the second set of questions\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"productFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(CardPanel, {\n    className: \"formCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, radioH), React.createElement(\"div\", {\n    id: \"radioDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Radios, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(Button, {\n    id: \"productBttn\",\n    onClick: () => updateCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \" Next \")))));\n};\n\nexport default ProductForm;","map":{"version":3,"sources":["C:/Users/Taylor/Documents/Coding/Leads/LeadsApp/src/Components/ProductForm/ProductForm.js"],"names":["React","useState","useEffect","CardPanel","Button","Header","MyFooter","products","ProductForm","props","url","currentUrl","console","log","productIndex","count","setCount","step","setStep","currentObj","getCurrentProduct","i","length","name","radioQ","radioH","radioI","header1","questions1","icons1","header2","questions2","icons2","header3","questions3","icons3","updateCount","Radios","indexNum","currentProduct","map","item","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { CardPanel, Button } from \"react-materialize\";\r\n\r\nimport Header from \"../Header/Header\";\r\nimport MyFooter from \"../Footer/Footer\";\r\n\r\nimport \"./productForm.css\";\r\nimport products from \"../../constants/products.js\";\r\n\r\n\r\nconst ProductForm = props => {\r\n    // let url = props.match.params.product;\r\n\r\n    let url = props.currentUrl;\r\n    console.log(url + \"is type of \" + typeof (url));\r\n    let productIndex = 0;\r\n    \r\n    const [count, setCount] = useState(1);\r\n    const [step, setStep] = useState(props.step);\r\n    let currentObj;\r\n\r\n    useEffect(() => setStep(props.step), [props.step]);\r\n\r\n    const getCurrentProduct = () => {\r\n        productIndex = 0;\r\n        for (let i = 0; i < products.products.length; i++) {\r\n            if (url === products.products[i].name) {\r\n                productIndex = i;\r\n                console.log(\"this worked! \" + products.products[i].name + \" array of\" + i);\r\n            }\r\n        }\r\n        currentObj = products.products[productIndex]\r\n        return currentObj;\r\n    }\r\n\r\n    // marker to show test\r\n    \r\n    getCurrentProduct();\r\n\r\n    let radioQ;\r\n    let radioH;\r\n    let radioI;\r\n    switch (count) {\r\n        case 1:\r\n            radioH = currentObj.header1\r\n            radioQ = currentObj.questions1;\r\n            radioI = currentObj.icons1;\r\n            break;\r\n        case 2:\r\n            radioH = currentObj.header2;\r\n            radioQ = currentObj.questions2;\r\n            radioI = currentObj.icons2;\r\n            break;\r\n        case 3:\r\n            if (currentObj.header3) {\r\n                radioH = currentObj.header3\r\n                radioQ = currentObj.questions3;\r\n                radioI = currentObj.icons3;\r\n                break;\r\n            } else {\r\n                // setCount(count + 1);\r\n                setStep(count + 1);\r\n                \r\n            };\r\n            break;\r\n            \r\n    };\r\n\r\n   const updateCount = () => {\r\n       setCount(count + 1);\r\n       setStep(step + 1);\r\n   }\r\n    \r\n    console.log(radioI);\r\n    console.log(radioQ);\r\n\r\n    const Radios = () => {\r\n\r\n        console.log(\"this is test/ array number \" + productIndex)\r\n        let indexNum = 0;\r\n        let currentProduct = radioQ.map((item) => {\r\n            // console.log(\"new line\" + currentObj.icons1[3]);\r\n            indexNum = radioQ.indexOf(item);\r\n            return (\r\n                <div className=\"customRadio\">\r\n                    {/* <CardPanel> */}\r\n                    <input\r\n                        className=\"with-gap\" type=\"radio\" name=\"product\"\r\n                        id={currentObj.name} value={currentObj.name} />\r\n                    <label htmlFor={currentObj.name}>\r\n                        <img className=\"radioImage hoverable\"\r\n                            src={radioI[indexNum]}\r\n                            alt={item} />\r\n                    </label>\r\n                    <p>{item}</p>\r\n                    {/* </CardPanel> */}\r\n                </div>\r\n            );\r\n        });\r\n        return currentProduct;\r\n    };\r\n\r\n    // use state once submit his hit, to slide in the second set of questions\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrap\" >\r\n                {/* <Header\r\n                    partnerLink={\"/partners\"}\r\n                    productLink={\"/#productHome\"}\r\n                /> */}\r\n                <div className=\"productFormContainer\">\r\n                    <CardPanel className=\"formCard\">\r\n                        <h2>{radioH}</h2>\r\n                        <div id=\"radioDiv\">\r\n                            <Radios />\r\n                        </div>\r\n                        <Button id=\"productBttn\" onClick={() => updateCount}> Next </Button>\r\n                    </CardPanel>\r\n                </div>\r\n            </div>\r\n            {/* <MyFooter /> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}