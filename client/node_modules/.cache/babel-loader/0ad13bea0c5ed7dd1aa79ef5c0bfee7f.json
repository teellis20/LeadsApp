{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\Documents\\\\Coding\\\\Leads\\\\LeadsApp\\\\src\\\\Components\\\\ProductForm\\\\ProductForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CardPanel, Button, Preloader } from \"react-materialize\";\nimport Header from \"../Header/Header\";\nimport MyFooter from \"../Footer/Footer\";\nimport \"./productForm.css\";\nimport products from \"../../constants/products.js\";\n\nconst ProductForm = props => {\n  // const [productIndex, setProductIndex] = useState(0);\n  const [currentObj, setCurrentObj] = useState(() => {\n    const initialState = getIntialObj();\n    return initialState;\n  }); // const [count, setCount] = useState(1);\n\n  let url = props.match.params.product;\n  let productIndex = 0; // let currentObj = {};\n\n  let count = 1; // useEffect(() => getCurrentProduct());\n\n  let tempObj;\n\n  const getCurrentProduct = () => {\n    let tempIndex = 0;\n\n    for (let i = 0; i < products.products.length; i++) {\n      if (url === products.products[i].name) {\n        console.log(\"this worked! \" + products.products[i].name + \" array of\" + i);\n        tempIndex = i;\n        productIndex = tempIndex; // setCurrentObj(products.products[tempIndex]);\n\n        tempObj = products.products[i];\n        console.log(currentObj);\n        console.log(currentObj.name);\n      }\n    }\n\n    return tempObj;\n  };\n\n  const getIntialObj = () => {\n    return tempObj;\n  };\n\n  let radioQ;\n  let radioH;\n  let radioI;\n\n  switch (count) {\n    case 1:\n      radioH = currentObj.header1;\n      radioQ = currentObj.questions1;\n      radioI = currentObj.icons1;\n      break;\n\n    case 2:\n      radioH = currentObj.header2;\n      radioQ = currentObj.questions2;\n      radioI = currentObj.icons2;\n      break;\n  }\n\n  const Radios = props => {\n    console.log(\"what rendered first?\");\n    getCurrentProduct(); // if (!radioQ) {\n    //     return (\n    //         <Preloader\n    //             active\n    //             color=\"blue\"\n    //             flashing={false}\n    //             size=\"big\"\n    //         />\n    //     )\n    // } else {\n    // console.log(\"this is test/ array number \" + productIndex)\n    // let currentObj = products.products[productIndex];\n    // let indexNum = 0;\n\n    radioQ.map(item => {\n      // indexNum = currentObj.questions1.indexOf(item);\n      return React.createElement(\"div\", {\n        key: item,\n        className: \"customRadio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"with-gap\",\n        type: \"radio\",\n        name: \"product\",\n        id: currentObj.name,\n        value: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"radioImage hoverable\",\n        src: radioI,\n        alt: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, item));\n    }); // }\n    // setHeading(currentObj.header1);\n    // return currentQuestion;\n  }; // use state once submit his hit, to slide in the second set of questions\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Header, {\n    partnerLink: \"/partners\",\n    productLink: \"/#productHome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"productFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(CardPanel, {\n    className: \"formCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, radioH), React.createElement(\"div\", {\n    id: \"radioDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Radios, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(Button, {\n    id: \"productBttn\",\n    onClick: () => count = count + 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \" Next \")))), React.createElement(MyFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }));\n};\n\nexport default ProductForm;","map":{"version":3,"sources":["C:/Users/Taylor/Documents/Coding/Leads/LeadsApp/src/Components/ProductForm/ProductForm.js"],"names":["React","useEffect","useState","CardPanel","Button","Preloader","Header","MyFooter","products","ProductForm","props","currentObj","setCurrentObj","initialState","getIntialObj","url","match","params","product","productIndex","count","tempObj","getCurrentProduct","tempIndex","i","length","name","console","log","radioQ","radioH","radioI","header1","questions1","icons1","header2","questions2","icons2","Radios","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,mBAA7C;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAGA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,MAAM;AAC/C,UAAMW,YAAY,GAAGC,YAAY,EAAjC;AACA,WAAOD,YAAP;AACH,GAH2C,CAA5C,CAHyB,CAOzB;;AAEA,MAAIE,GAAG,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAA7B;AACA,MAAIC,YAAY,GAAG,CAAnB,CAVyB,CAWzB;;AACA,MAAIC,KAAK,GAAG,CAAZ,CAZyB,CAczB;;AACA,MAAIC,OAAJ;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAIC,SAAS,GAAG,CAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,QAAQ,CAACA,QAAT,CAAkBiB,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,UAAIT,GAAG,KAAKP,QAAQ,CAACA,QAAT,CAAkBgB,CAAlB,EAAqBE,IAAjC,EAAuC;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBpB,QAAQ,CAACA,QAAT,CAAkBgB,CAAlB,EAAqBE,IAAvC,GAA8C,WAA9C,GAA4DF,CAAxE;AACAD,QAAAA,SAAS,GAAGC,CAAZ;AACAL,QAAAA,YAAY,GAAGI,SAAf,CAHmC,CAInC;;AACAF,QAAAA,OAAO,GAAGb,QAAQ,CAACA,QAAT,CAAkBgB,CAAlB,CAAV;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAU,CAACe,IAAvB;AACH;AACJ;;AACD,WAAOL,OAAP;AACH,GAdD;;AAgBA,QAAMP,YAAY,GAAG,MAAM;AAAC,WAAOO,OAAP;AAAe,GAA3C;;AAKA,MAAIQ,MAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,MAAJ;;AACA,UAAQX,KAAR;AACI,SAAK,CAAL;AACIU,MAAAA,MAAM,GAAGnB,UAAU,CAACqB,OAApB;AACAH,MAAAA,MAAM,GAAGlB,UAAU,CAACsB,UAApB;AACAF,MAAAA,MAAM,GAAGpB,UAAU,CAACuB,MAApB;AACA;;AACJ,SAAK,CAAL;AACIJ,MAAAA,MAAM,GAAGnB,UAAU,CAACwB,OAApB;AACAN,MAAAA,MAAM,GAAGlB,UAAU,CAACyB,UAApB;AACAL,MAAAA,MAAM,GAAGpB,UAAU,CAAC0B,MAApB;AACA;AAVR;;AAgBA,QAAMC,MAAM,GAAI5B,KAAD,IAAW;AACtBiB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAN,IAAAA,iBAAiB,GAFK,CAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;;AACAO,IAAAA,MAAM,CAACU,GAAP,CAAYC,IAAD,IAAU;AACjB;AACA,aACI;AAAK,QAAA,GAAG,EAAEA,IAAV;AAAgB,QAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AACI,QAAA,SAAS,EAAC,UADd;AACyB,QAAA,IAAI,EAAC,OAD9B;AACsC,QAAA,IAAI,EAAC,SAD3C;AAEI,QAAA,EAAE,EAAE7B,UAAU,CAACe,IAFnB;AAEyB,QAAA,KAAK,EAAC,SAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAKI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AACI,QAAA,GAAG,EAAEK,MADT;AAEI,QAAA,GAAG,EAAES,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,IAAJ,CAVJ,CADJ;AAeH,KAjBD,EAhBkB,CAkCtB;AACA;AACA;AACH,GArCD,CAzDyB,CAgGzB;;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,WAAW,EAAE,WADjB;AAEI,IAAA,WAAW,EAAE,eAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,MAAL,CADJ,EAEI;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAE,MAAMV,KAAK,GAAGA,KAAK,GAAG,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADJ,CALJ,CADJ,EAgBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADJ;AAoBH,CAtHD;;AAwHA,eAAeX,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CardPanel, Button, Preloader } from \"react-materialize\";\r\n\r\nimport Header from \"../Header/Header\";\r\nimport MyFooter from \"../Footer/Footer\";\r\n\r\nimport \"./productForm.css\";\r\nimport products from \"../../constants/products.js\";\r\n\r\n\r\nconst ProductForm = props => {\r\n\r\n    // const [productIndex, setProductIndex] = useState(0);\r\n    const [currentObj, setCurrentObj] = useState(() => {\r\n        const initialState = getIntialObj();\r\n        return initialState;\r\n    });\r\n    // const [count, setCount] = useState(1);\r\n\r\n    let url = props.match.params.product;\r\n    let productIndex = 0;\r\n    // let currentObj = {};\r\n    let count = 1;\r\n\r\n    // useEffect(() => getCurrentProduct());\r\n    let tempObj;\r\n\r\n    const getCurrentProduct = () => {\r\n        let tempIndex = 0;\r\n        for (let i = 0; i < products.products.length; i++) {\r\n            if (url === products.products[i].name) {\r\n                console.log(\"this worked! \" + products.products[i].name + \" array of\" + i);\r\n                tempIndex = i\r\n                productIndex = tempIndex;\r\n                // setCurrentObj(products.products[tempIndex]);\r\n                tempObj = products.products[i];\r\n                console.log(currentObj);\r\n                console.log(currentObj.name);\r\n            }\r\n        }\r\n        return tempObj;\r\n    }\r\n\r\n    const getIntialObj = () => {return tempObj}\r\n\r\n\r\n\r\n\r\n    let radioQ;\r\n    let radioH;\r\n    let radioI;\r\n    switch (count) {\r\n        case 1:\r\n            radioH = currentObj.header1\r\n            radioQ = currentObj.questions1;\r\n            radioI = currentObj.icons1;\r\n            break;\r\n        case 2:\r\n            radioH = currentObj.header2;\r\n            radioQ = currentObj.questions2;\r\n            radioI = currentObj.icons2;\r\n            break;\r\n\r\n    }\r\n\r\n\r\n\r\n    const Radios = (props) => {\r\n        console.log(\"what rendered first?\")\r\n        getCurrentProduct();\r\n        // if (!radioQ) {\r\n        //     return (\r\n        //         <Preloader\r\n        //             active\r\n        //             color=\"blue\"\r\n        //             flashing={false}\r\n        //             size=\"big\"\r\n        //         />\r\n        //     )\r\n        // } else {\r\n            // console.log(\"this is test/ array number \" + productIndex)\r\n            // let currentObj = products.products[productIndex];\r\n            // let indexNum = 0;\r\n            radioQ.map((item) => {\r\n                // indexNum = currentObj.questions1.indexOf(item);\r\n                return (\r\n                    <div key={item} className=\"customRadio\">\r\n                        {/* <CardPanel> */}\r\n                        <input\r\n                            className=\"with-gap\" type=\"radio\" name=\"product\"\r\n                            id={currentObj.name} value=\"product\" />\r\n                        <label htmlFor='product'>\r\n                            <img className=\"radioImage hoverable\"\r\n                                src={radioI}\r\n                                alt={item} />\r\n                        </label>\r\n                        <p>{item}</p>\r\n                        {/* </CardPanel> */}\r\n                    </div>\r\n                );\r\n            });\r\n        // }\r\n        // setHeading(currentObj.header1);\r\n        // return currentQuestion;\r\n    };\r\n\r\n    // use state once submit his hit, to slide in the second set of questions\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrap\" >\r\n                <Header\r\n                    partnerLink={\"/partners\"}\r\n                    productLink={\"/#productHome\"}\r\n                />\r\n                <div className=\"productFormContainer\">\r\n                    <CardPanel className=\"formCard\">\r\n                        <h2>{radioH}</h2>\r\n                        <div id=\"radioDiv\">\r\n                            <Radios />\r\n                        </div>\r\n                        <Button id=\"productBttn\" onClick={() => count = count + 1}> Next </Button>\r\n                    </CardPanel>\r\n                </div>\r\n            </div>\r\n            <MyFooter />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}