{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\Documents\\\\Coding\\\\Leads\\\\LeadsApp\\\\src\\\\Components\\\\ProductForm\\\\ProductForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { CardPanel, Button } from \"react-materialize\";\nimport Header from \"../Header/Header\";\nimport MyFooter from \"../Footer/Footer\";\nimport \"./productForm.css\";\nimport products from \"../../constants/products.js\"; // changes were made here on out\n// just to make sure I don't miss it\n\nconst ProductForm = props => {\n  // let url = props.match.params.product;\n  // let url = props.currentUrl;\n  // console.log(url + \"is type of \" + typeof (url));\n  //     let productIndex = 0;\n  //     const [count, setCount] = useState(1);\n  //     const [step, setStep] = useState(props.step);\n  //     let currentObj;\n  //     // useEffect(() => , []);\n  //     const getCurrentProduct = () => {\n  //         productIndex = 0;\n  //         for (let i = 0; i < products.products.length; i++) {\n  //             if (url === products.products[i].name) {\n  //                 productIndex = i;\n  //                 // console.log(\"this worked! \" + products.products[i].name + \" array of\" + i);\n  //             }\n  //         }\n  //         currentObj = products.products[productIndex]\n  //         return currentObj;\n  //     }\n  //     // marker to show test\n  //     getCurrentProduct();\n  //     let radioQ;\n  //     let radioH;\n  //     let radioI;\n  //     let renderButton;\n  //     switch (count) {\n  //         case 1:\n  //             radioH = currentObj.header1\n  //             radioQ = currentObj.questions1;\n  //             radioI = currentObj.icons1;\n  //             break;\n  //         case 2:\n  //             radioH = currentObj.header2;\n  //             radioQ = currentObj.questions2;\n  //             radioI = currentObj.icons2;\n  //             renderButton = <Button id=\"backBttn\" onClick={() => {backStep()}} > Back </Button>;\n  //             break;\n  //         case 3:\n  //             if (currentObj.header3) {\n  //                 radioH = currentObj.header3\n  //                 radioQ = currentObj.questions3;\n  //                 radioI = currentObj.icons3;\n  //                 renderButton = <Button id=\"backBttn\" onClick={() => {backStep()}} > Back </Button>;\n  //                 break;\n  //             } else {\n  //                 setCount(count + 1);\n  //                 setStep(step + 1);\n  //             };\n  //             break;\n  //     };\n  //    const updateCount = () => {\n  //        setCount(count + 1);\n  //        setStep(step + 1);\n  //        console.log( \"this is step: \" + step);\n  //        console.log( \"this is count: \" + count);\n  //    }\n  //    const backStep = () => {\n  //        setCount(count - 1);\n  //        setStep(step - 1);\n  //    }\n  //     // console.log(radioI);\n  //     // console.log(radioQ);\n  const Radios = () => {\n    // console.log(\"this is test/ array number \" + productIndex);\n    let indexNum = 0;\n    let currentProduct = props.radioQ.map(item => {\n      // console.log(\"new line\" + currentObj.icons1[3]);\n      indexNum = props.radioQ.indexOf(item);\n      return React.createElement(\"div\", {\n        className: \"customRadio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"with-gap\",\n        type: \"radio\",\n        name: \"product\",\n        id: props.currentObj.name,\n        value: props.currentObj.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: props.currentObj.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"radioImage hoverable\",\n        src: props.radioI[indexNum],\n        alt: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, item));\n    });\n    return currentProduct;\n  }; // use state once submit his hit, to slide in the second set of questions\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"productFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(CardPanel, {\n    className: \"formCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, props.radioH), React.createElement(\"div\", {\n    id: \"radioDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Radios, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), props.renderButton, React.createElement(Button, {\n    id: \"productBttn\",\n    onClick: () => props.updateCount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \" Next \")))));\n};\n\nexport default ProductForm;","map":{"version":3,"sources":["C:/Users/Taylor/Documents/Coding/Leads/LeadsApp/src/Components/ProductForm/ProductForm.js"],"names":["React","useState","useEffect","CardPanel","Button","Header","MyFooter","products","ProductForm","props","Radios","indexNum","currentProduct","radioQ","map","item","indexOf","currentObj","name","radioI","radioH","renderButton","updateCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,6BAArB,C,CAEA;AACA;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB;AAEA;AACA;AACJ;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEI,QAAMC,MAAM,GAAG,MAAM;AAEjB;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,cAAc,GAAGH,KAAK,CAACI,MAAN,CAAaC,GAAb,CAAkBC,IAAD,IAAU;AAC5C;AACAJ,MAAAA,QAAQ,GAAGF,KAAK,CAACI,MAAN,CAAaG,OAAb,CAAqBD,IAArB,CAAX;AACA,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AACI,QAAA,SAAS,EAAC,UADd;AACyB,QAAA,IAAI,EAAC,OAD9B;AACsC,QAAA,IAAI,EAAC,SAD3C;AAEI,QAAA,EAAE,EAAEN,KAAK,CAACQ,UAAN,CAAiBC,IAFzB;AAE+B,QAAA,KAAK,EAAET,KAAK,CAACQ,UAAN,CAAiBC,IAFvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAKI;AAAO,QAAA,OAAO,EAAET,KAAK,CAACQ,UAAN,CAAiBC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AACI,QAAA,GAAG,EAAET,KAAK,CAACU,MAAN,CAAaR,QAAb,CADT;AAEI,QAAA,GAAG,EAAEI,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,IAAJ,CAVJ,CADJ;AAeH,KAlBoB,CAArB;AAmBA,WAAOH,cAAP;AACH,GAxBD,CA7EyB,CAuGzB;;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACW,MAAX,CADJ,EAEI;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKKX,KAAK,CAACY,YALX,EAMI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAE,MAAMZ,KAAK,CAACa,WAAN,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADJ,CALJ,CADJ,CADJ;AAqBH,CA9HD;;AAgIA,eAAed,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { CardPanel, Button } from \"react-materialize\";\r\n\r\nimport Header from \"../Header/Header\";\r\nimport MyFooter from \"../Footer/Footer\";\r\n\r\nimport \"./productForm.css\";\r\nimport products from \"../../constants/products.js\";\r\n\r\n// changes were made here on out\r\n// just to make sure I don't miss it\r\n\r\nconst ProductForm = props => {\r\n    // let url = props.match.params.product;\r\n\r\n    // let url = props.currentUrl;\r\n    // console.log(url + \"is type of \" + typeof (url));\r\n//     let productIndex = 0;\r\n    \r\n//     const [count, setCount] = useState(1);\r\n//     const [step, setStep] = useState(props.step);\r\n//     let currentObj;\r\n\r\n//     // useEffect(() => , []);\r\n\r\n//     const getCurrentProduct = () => {\r\n//         productIndex = 0;\r\n//         for (let i = 0; i < products.products.length; i++) {\r\n//             if (url === products.products[i].name) {\r\n//                 productIndex = i;\r\n//                 // console.log(\"this worked! \" + products.products[i].name + \" array of\" + i);\r\n//             }\r\n//         }\r\n//         currentObj = products.products[productIndex]\r\n//         return currentObj;\r\n//     }\r\n\r\n//     // marker to show test\r\n    \r\n//     getCurrentProduct();\r\n\r\n//     let radioQ;\r\n//     let radioH;\r\n//     let radioI;\r\n//     let renderButton;\r\n\r\n//     switch (count) {\r\n//         case 1:\r\n//             radioH = currentObj.header1\r\n//             radioQ = currentObj.questions1;\r\n//             radioI = currentObj.icons1;\r\n//             break;\r\n//         case 2:\r\n//             radioH = currentObj.header2;\r\n//             radioQ = currentObj.questions2;\r\n//             radioI = currentObj.icons2;\r\n//             renderButton = <Button id=\"backBttn\" onClick={() => {backStep()}} > Back </Button>;\r\n//             break;\r\n//         case 3:\r\n//             if (currentObj.header3) {\r\n//                 radioH = currentObj.header3\r\n//                 radioQ = currentObj.questions3;\r\n//                 radioI = currentObj.icons3;\r\n//                 renderButton = <Button id=\"backBttn\" onClick={() => {backStep()}} > Back </Button>;\r\n//                 break;\r\n//             } else {\r\n//                 setCount(count + 1);\r\n//                 setStep(step + 1);\r\n                \r\n//             };\r\n//             break;\r\n            \r\n//     };\r\n\r\n//    const updateCount = () => {\r\n//        setCount(count + 1);\r\n//        setStep(step + 1);\r\n//        console.log( \"this is step: \" + step);\r\n//        console.log( \"this is count: \" + count);\r\n//    }\r\n   \r\n//    const backStep = () => {\r\n//        setCount(count - 1);\r\n//        setStep(step - 1);\r\n//    }\r\n    \r\n//     // console.log(radioI);\r\n//     // console.log(radioQ);\r\n\r\n    const Radios = () => {\r\n\r\n        // console.log(\"this is test/ array number \" + productIndex);\r\n        let indexNum = 0;\r\n        let currentProduct = props.radioQ.map((item) => {\r\n            // console.log(\"new line\" + currentObj.icons1[3]);\r\n            indexNum = props.radioQ.indexOf(item);\r\n            return (\r\n                <div className=\"customRadio\">\r\n                    {/* <CardPanel> */}\r\n                    <input\r\n                        className=\"with-gap\" type=\"radio\" name=\"product\"\r\n                        id={props.currentObj.name} value={props.currentObj.name} />\r\n                    <label htmlFor={props.currentObj.name}>\r\n                        <img className=\"radioImage hoverable\"\r\n                            src={props.radioI[indexNum]}\r\n                            alt={item} />\r\n                    </label>\r\n                    <p>{item}</p>\r\n                    {/* </CardPanel> */}\r\n                </div>\r\n            );\r\n        });\r\n        return currentProduct;\r\n    };\r\n\r\n    // use state once submit his hit, to slide in the second set of questions\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrap\" >\r\n                {/* <Header\r\n                    partnerLink={\"/partners\"}\r\n                    productLink={\"/#productHome\"}\r\n                /> */}\r\n                <div className=\"productFormContainer\">\r\n                    <CardPanel className=\"formCard\">\r\n                        <h2>{props.radioH}</h2>\r\n                        <div id=\"radioDiv\">\r\n                            <Radios />\r\n                        </div>\r\n                        {props.renderButton}\r\n                        <Button id=\"productBttn\" onClick={() => props.updateCount()}> Next </Button>\r\n                    </CardPanel>\r\n                </div>\r\n            </div>\r\n            {/* <MyFooter /> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}