{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\Documents\\\\Coding\\\\Leads\\\\LeadsApp\\\\src\\\\Components\\\\ProductForm\\\\ProductForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CardPanel, Button } from \"react-materialize\";\nimport Header from \"../Header/Header\";\nimport MyFooter from \"../Footer/Footer\";\nimport \"./productForm.css\";\nimport products from \"../../constants/products.js\";\n\nconst ProductForm = props => {\n  const [productIndex, setProductIndex] = useState(0);\n  const [currentObj, setCurrentObj] = useState({});\n  const [heading, setHeading] = useState();\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [iconNumber, setIconNumber] = useState(1);\n  const [count, setCount] = useState(1);\n  let url = props.match.params.product; // useEffect(() => getCurrentProduct());\n  // getCurrentProduct = () => {\n  // productIndex = 0;\n  // return productIndex;\n\n  console.log(\"this worked! \" + currentObj.name);\n  console.log(\"get product ran\"); // }\n\n  let radioQ;\n  let radioH;\n  let radioI;\n\n  switch (count) {\n    case 1:\n      radioH = currentObj.header1;\n      radioQ = currentObj.questions1;\n      radioI = currentObj.icons1;\n      break;\n\n    case 2:\n      radioH = currentObj.header2;\n      radioQ = currentObj.questions2;\n      radioI = currentObj.icons2;\n      break;\n  }\n\n  const Radios = () => {\n    for (let i = 0; i < products.products.length; i++) {\n      if (url === products.products[i].name) {\n        setProductIndex(i);\n        setCurrentObj(products.products[i]);\n        console.log(\"1\");\n      }\n    }\n\n    console.log(\"this worked! \" + currentObj.name);\n    console.log(url); // getCurrentProduct()\n    // console.log(\"this worked! \" + productIndex);\n    // console.log(\"this is test/ array number \" + productIndex)\n    // let currentObj = products.products[productIndex];\n    // let indexNum = 0;\n\n    radioQ.map(item => {\n      // indexNum = currentObj.questions1.indexOf(item);\n      return React.createElement(\"div\", {\n        key: item,\n        className: \"customRadio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"with-gap\",\n        type: \"radio\",\n        name: \"product\",\n        id: currentObj.name,\n        value: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"radioImage hoverable\",\n        src: radioI,\n        alt: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, item));\n    }); // setHeading(currentObj.header1);\n    // return currentQuestion;\n  }; // use state once submit his hit, to slide in the second set of questions\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Header, {\n    partnerLink: \"/partners\",\n    productLink: \"/#productHome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"productFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(CardPanel, {\n    className: \"formCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, radioH), React.createElement(\"div\", {\n    id: \"radioDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Radios, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(Button, {\n    id: \"productBttn\",\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \" Next \")))), React.createElement(MyFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }));\n};\n\nexport default ProductForm;","map":{"version":3,"sources":["C:/Users/Taylor/Documents/Coding/Leads/LeadsApp/src/Components/ProductForm/ProductForm.js"],"names":["React","useEffect","useState","CardPanel","Button","Header","MyFooter","products","ProductForm","props","productIndex","setProductIndex","currentObj","setCurrentObj","heading","setHeading","questionNumber","setQuestionNumber","iconNumber","setIconNumber","count","setCount","url","match","params","product","console","log","name","radioQ","radioH","radioI","header1","questions1","icons1","header2","questions2","icons2","Radios","i","length","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CardPanel, Button } from \"react-materialize\";\r\n\r\nimport Header from \"../Header/Header\";\r\nimport MyFooter from \"../Footer/Footer\";\r\n\r\nimport \"./productForm.css\";\r\nimport products from \"../../constants/products.js\";\r\n\r\n\r\nconst ProductForm = props => {\r\n\r\n    const [productIndex, setProductIndex] = useState(0);\r\n    const [currentObj, setCurrentObj] = useState({});\r\n    const [heading, setHeading] = useState();\r\n    const [questionNumber, setQuestionNumber] = useState(1);\r\n    const [iconNumber, setIconNumber] = useState(1);\r\n    const [count, setCount] = useState(1);\r\n\r\n    let url = props.match.params.product;\r\n\r\n    // useEffect(() => getCurrentProduct());\r\n\r\n    // getCurrentProduct = () => {\r\n        // productIndex = 0;\r\n        \r\n        // return productIndex;\r\n        console.log(\"this worked! \" + currentObj.name);\r\n        console.log(\"get product ran\");\r\n    // }\r\n\r\n    let radioQ;\r\n    let radioH;\r\n    let radioI;\r\n    switch (count) {\r\n        case 1:\r\n            radioH = currentObj.header1\r\n            radioQ = currentObj.questions1;\r\n            radioI = currentObj.icons1;\r\n            break;\r\n        case 2:\r\n            radioH = currentObj.header2;\r\n            radioQ = currentObj.questions2;\r\n            radioI = currentObj.icons2;\r\n            break;\r\n\r\n    }\r\n\r\n\r\n   const Radios = () => {\r\n    for (let i = 0; i < products.products.length; i++) {\r\n        if (url === products.products[i].name) {\r\n            setProductIndex(i);\r\n            setCurrentObj(products.products[i]);\r\n            console.log(\"1\")\r\n        }\r\n    }\r\n    console.log(\"this worked! \" + currentObj.name);\r\n    console.log(url);\r\n        // getCurrentProduct()\r\n        // console.log(\"this worked! \" + productIndex);\r\n        // console.log(\"this is test/ array number \" + productIndex)\r\n        // let currentObj = products.products[productIndex];\r\n        // let indexNum = 0;\r\n        radioQ.map((item) => {\r\n            // indexNum = currentObj.questions1.indexOf(item);\r\n            return (\r\n                <div key={item}className=\"customRadio\">\r\n                    {/* <CardPanel> */}\r\n                    <input\r\n                        className=\"with-gap\" type=\"radio\" name=\"product\"\r\n                        id={currentObj.name} value=\"product\" />\r\n                    <label htmlFor='product'>\r\n                        <img className=\"radioImage hoverable\"\r\n                            src={radioI}\r\n                            alt={item} />\r\n                    </label>\r\n                    <p>{item}</p>\r\n                    {/* </CardPanel> */}\r\n                </div>\r\n            );\r\n        });\r\n        // setHeading(currentObj.header1);\r\n        // return currentQuestion;\r\n    };\r\n\r\n    // use state once submit his hit, to slide in the second set of questions\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrap\" >\r\n                <Header\r\n                    partnerLink={\"/partners\"}\r\n                    productLink={\"/#productHome\"}\r\n                />\r\n                <div className=\"productFormContainer\">\r\n                    <CardPanel className=\"formCard\">\r\n                        <h2>{radioH}</h2>\r\n                        <div id=\"radioDiv\">\r\n                            <Radios />\r\n                        </div>\r\n                        <Button id=\"productBttn\" onClick={() => setCount(count + 1)}> Next </Button>\r\n                    </CardPanel>\r\n                </div>\r\n            </div>\r\n            <MyFooter />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}