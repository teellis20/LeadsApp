{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\Documents\\\\Coding\\\\Leads\\\\LeadsApp\\\\src\\\\Components\\\\ProductForm\\\\ProductForm.js\";\nimport React, { useState } from \"react\";\nimport { CardPanel, Button } from \"react-materialize\";\nimport Header from \"../Header/Header\";\nimport MyFooter from \"../Footer/Footer\";\nimport LeadsForm from \"../LeadForm/LeadForm\";\nimport \"./productForm.css\";\nimport products from \"../../constants/products.js\";\n\nconst ProductForm = props => {\n  let url = props.match.params.product;\n  console.log(url + \"is type of \" + typeof url);\n  let productIndex = 0;\n  const [count, setCount] = useState(1);\n  let currentObj; // useEffect(() => getCurrentProduct(), []);\n\n  const getCurrentProduct = () => {\n    productIndex = 0;\n\n    for (let i = 0; i < products.products.length; i++) {\n      if (url === products.products[i].name) {\n        productIndex = i;\n        console.log(\"this worked! \" + products.products[i].name + \" array of\" + i);\n      }\n    }\n\n    currentObj = products.products[productIndex];\n    return currentObj;\n  }; // marker to show test\n\n\n  getCurrentProduct();\n  let radioQ;\n  let radioH;\n  let radioI;\n\n  const renderSwitch = () => {\n    switch (count) {\n      case 1:\n        radioH = currentObj.header1;\n        radioQ = currentObj.questions1;\n        radioI = currentObj.icons1;\n        return React.createElement(Radios, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      // break;\n\n      case 2:\n        radioH = currentObj.header2;\n        radioQ = currentObj.questions2;\n        radioI = currentObj.icons2;\n        return React.createElement(Radios, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n        break;\n\n      case 3:\n        if (currentObj.header3) {\n          radioH = currentObj.header3;\n          radioQ = currentObj.questions3;\n          radioI = currentObj.icons3;\n          return React.createElement(Radios, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n          break;\n        } else {\n          setCount(count + 1);\n        }\n\n        ;\n        break;\n\n      case 4:\n        return React.createElement(LeadsForm, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n    }\n\n    ;\n  };\n\n  console.log(radioI);\n  console.log(radioQ);\n\n  const Radios = () => {\n    console.log(\"this is test/ array number \" + productIndex);\n    let indexNum = 0;\n    let currentProduct = radioQ.map(item => {\n      // console.log(\"new line\" + currentObj.icons1[3]);\n      indexNum = radioQ.indexOf(item);\n      return React.createElement(\"div\", {\n        className: \"customRadio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"with-gap\",\n        type: \"radio\",\n        name: \"product\",\n        id: currentObj.name,\n        value: currentObj.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: currentObj.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"radioImage hoverable\",\n        src: radioI[indexNum],\n        alt: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, item));\n    });\n    return currentProduct;\n  }; // use state once submit his hit, to slide in the second set of questions\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Header, {\n    partnerLink: \"/partners\",\n    productLink: \"/#productHome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"productFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(CardPanel, {\n    className: \"formCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, radioH), React.createElement(\"div\", {\n    id: \"radioDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, renderSwitch), React.createElement(Button, {\n    id: \"productBttn\",\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \" Next \")))), React.createElement(MyFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }));\n};\n\nexport default ProductForm;","map":{"version":3,"sources":["C:/Users/Taylor/Documents/Coding/Leads/LeadsApp/src/Components/ProductForm/ProductForm.js"],"names":["React","useState","CardPanel","Button","Header","MyFooter","LeadsForm","products","ProductForm","props","url","match","params","product","console","log","productIndex","count","setCount","currentObj","getCurrentProduct","i","length","name","radioQ","radioH","radioI","renderSwitch","header1","questions1","icons1","header2","questions2","icons2","header3","questions3","icons3","Radios","indexNum","currentProduct","map","item","indexOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAGA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,MAAIC,GAAG,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,OAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,GAAG,aAAN,GAAsB,OAAQA,GAA1C;AACA,MAAIM,YAAY,GAAG,CAAnB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAIkB,UAAJ,CAPyB,CASzB;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BJ,IAAAA,YAAY,GAAG,CAAf;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,QAAQ,CAACA,QAAT,CAAkBe,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,UAAIX,GAAG,KAAKH,QAAQ,CAACA,QAAT,CAAkBc,CAAlB,EAAqBE,IAAjC,EAAuC;AACnCP,QAAAA,YAAY,GAAGK,CAAf;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBR,QAAQ,CAACA,QAAT,CAAkBc,CAAlB,EAAqBE,IAAvC,GAA8C,WAA9C,GAA4DF,CAAxE;AACH;AACJ;;AACDF,IAAAA,UAAU,GAAGZ,QAAQ,CAACA,QAAT,CAAkBS,YAAlB,CAAb;AACA,WAAOG,UAAP;AACH,GAVD,CAXyB,CAuBzB;;;AAEAC,EAAAA,iBAAiB;AAEjB,MAAII,MAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,MAAJ;;AACA,QAAMC,YAAY,GAAG,MAAM;AAC3B,YAAQV,KAAR;AACI,WAAK,CAAL;AACIQ,QAAAA,MAAM,GAAGN,UAAU,CAACS,OAApB;AACAJ,QAAAA,MAAM,GAAGL,UAAU,CAACU,UAApB;AACAH,QAAAA,MAAM,GAAGP,UAAU,CAACW,MAApB;AACA,eAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AACJ,WAAK,CAAL;AACIL,QAAAA,MAAM,GAAGN,UAAU,CAACY,OAApB;AACAP,QAAAA,MAAM,GAAGL,UAAU,CAACa,UAApB;AACAN,QAAAA,MAAM,GAAGP,UAAU,CAACc,MAApB;AACA,eAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AACJ,WAAK,CAAL;AACI,YAAId,UAAU,CAACe,OAAf,EAAwB;AACpBT,UAAAA,MAAM,GAAGN,UAAU,CAACe,OAApB;AACAV,UAAAA,MAAM,GAAGL,UAAU,CAACgB,UAApB;AACAT,UAAAA,MAAM,GAAGP,UAAU,CAACiB,MAApB;AACA,iBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;AACH,SAND,MAMO;AACHlB,UAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAAA;AACD;;AACJ,WAAK,CAAL;AACI,eAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAzBR;;AA0BC;AACJ,GA5BG;;AA8BAH,EAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;;AAEA,QAAMa,MAAM,GAAG,MAAM;AAEjBvB,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCC,YAA5C;AACA,QAAIsB,QAAQ,GAAG,CAAf;AACA,QAAIC,cAAc,GAAGf,MAAM,CAACgB,GAAP,CAAYC,IAAD,IAAU;AACtC;AACAH,MAAAA,QAAQ,GAAGd,MAAM,CAACkB,OAAP,CAAeD,IAAf,CAAX;AACA,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AACI,QAAA,SAAS,EAAC,UADd;AACyB,QAAA,IAAI,EAAC,OAD9B;AACsC,QAAA,IAAI,EAAC,SAD3C;AAEI,QAAA,EAAE,EAAEtB,UAAU,CAACI,IAFnB;AAEyB,QAAA,KAAK,EAAEJ,UAAU,CAACI,IAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAKI;AAAO,QAAA,OAAO,EAAEJ,UAAU,CAACI,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AACI,QAAA,GAAG,EAAEG,MAAM,CAACY,QAAD,CADf;AAEI,QAAA,GAAG,EAAEG,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,IAAJ,CAVJ,CADJ;AAeH,KAlBoB,CAArB;AAmBA,WAAOF,cAAP;AACH,GAxBD,CA/DyB,CAyFzB;;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,WAAW,EAAE,WADjB;AAEI,IAAA,WAAW,EAAE,eAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKd,MAAL,CADJ,EAEI;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,YADL,CAFJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAE,MAAMT,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADJ,CALJ,CADJ,EAgBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADJ;AAoBH,CA/GD;;AAiHA,eAAeT,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { CardPanel, Button } from \"react-materialize\";\r\n\r\nimport Header from \"../Header/Header\";\r\nimport MyFooter from \"../Footer/Footer\";\r\nimport LeadsForm from \"../LeadForm/LeadForm\";\r\n\r\nimport \"./productForm.css\";\r\nimport products from \"../../constants/products.js\";\r\n\r\n\r\nconst ProductForm = props => {\r\n\r\n    let url = props.match.params.product;\r\n    console.log(url + \"is type of \" + typeof (url));\r\n    let productIndex = 0;\r\n    \r\n    const [count, setCount] = useState(1);\r\n    let currentObj;\r\n\r\n    // useEffect(() => getCurrentProduct(), []);\r\n\r\n    const getCurrentProduct = () => {\r\n        productIndex = 0;\r\n        for (let i = 0; i < products.products.length; i++) {\r\n            if (url === products.products[i].name) {\r\n                productIndex = i;\r\n                console.log(\"this worked! \" + products.products[i].name + \" array of\" + i);\r\n            }\r\n        }\r\n        currentObj = products.products[productIndex]\r\n        return currentObj;\r\n    }\r\n\r\n    // marker to show test\r\n    \r\n    getCurrentProduct();\r\n\r\n    let radioQ;\r\n    let radioH;\r\n    let radioI;\r\n    const renderSwitch = () => {\r\n    switch (count) {\r\n        case 1:\r\n            radioH = currentObj.header1\r\n            radioQ = currentObj.questions1;\r\n            radioI = currentObj.icons1;\r\n            return <Radios />;\r\n            // break;\r\n        case 2:\r\n            radioH = currentObj.header2;\r\n            radioQ = currentObj.questions2;\r\n            radioI = currentObj.icons2;\r\n            return <Radios />;\r\n            break;\r\n        case 3:\r\n            if (currentObj.header3) {\r\n                radioH = currentObj.header3\r\n                radioQ = currentObj.questions3;\r\n                radioI = currentObj.icons3;\r\n                return <Radios />;\r\n                break;\r\n            } else {\r\n                setCount(count + 1);\r\n            };\r\n            break;\r\n        case 4: \r\n            return <LeadsForm />\r\n    };\r\n};\r\n    \r\n    console.log(radioI);\r\n    console.log(radioQ);\r\n\r\n    const Radios = () => {\r\n\r\n        console.log(\"this is test/ array number \" + productIndex)\r\n        let indexNum = 0;\r\n        let currentProduct = radioQ.map((item) => {\r\n            // console.log(\"new line\" + currentObj.icons1[3]);\r\n            indexNum = radioQ.indexOf(item);\r\n            return (\r\n                <div className=\"customRadio\">\r\n                    {/* <CardPanel> */}\r\n                    <input\r\n                        className=\"with-gap\" type=\"radio\" name=\"product\"\r\n                        id={currentObj.name} value={currentObj.name} />\r\n                    <label htmlFor={currentObj.name}>\r\n                        <img className=\"radioImage hoverable\"\r\n                            src={radioI[indexNum]}\r\n                            alt={item} />\r\n                    </label>\r\n                    <p>{item}</p>\r\n                    {/* </CardPanel> */}\r\n                </div>\r\n            );\r\n        });\r\n        return currentProduct;\r\n    };\r\n\r\n    // use state once submit his hit, to slide in the second set of questions\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrap\" >\r\n                <Header\r\n                    partnerLink={\"/partners\"}\r\n                    productLink={\"/#productHome\"}\r\n                />\r\n                <div className=\"productFormContainer\">\r\n                    <CardPanel className=\"formCard\">\r\n                        <h2>{radioH}</h2>\r\n                        <div id=\"radioDiv\">\r\n                            {renderSwitch}\r\n                        </div>\r\n                        <Button id=\"productBttn\" onClick={() => setCount(count + 1)}> Next </Button>\r\n                    </CardPanel>\r\n                </div>\r\n            </div>\r\n            <MyFooter />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}